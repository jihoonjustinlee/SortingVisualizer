{"version":3,"sources":["components/BubbleSortRegion/BubbleSortRegion.js","components/QuickSortRegion/QuickSortRegion.js","components/MinMaxInput/MinMaxInput.js","algorithms/quicksort.js","algorithms/bubblesort.js","components/SortingBody/SortingBody.js","App.js","serviceWorker.js","index.js"],"names":["BubbleSortRegion","props","className","bars","i","j","QuickSortRegion","swap_index","partition_index","MinMaxInput","state","min","currentMin","max","currentMax","message","isValid","this","isNaN","parseInt","setState","applyMinMaxChange","CSSTransition","in","timeout","unmountOnExit","disabled","disableUI","type","id","value","onChange","e","target","onClick","applyChange","React","Component","quicksort","animations","arr","start","end","partitionIndex","pivotIndex","pivotValue","swap","swapIndexes","push","values","indexes","pivotEnd","partition","a","b","temp","swapIndex","swapValues","getRandomizedNumberFromInterval","Math","floor","random","SortingBody","timer","array","timeDelay","minNum","maxNum","minmaxinput_opened","showBarLabel","algorithm","bubblesort_i","bubblesort_j","quicksort_i","quicksort_swap_index","quicksort_partition_index","randomizeArray","window","addEventListener","handleWindowResize","bind","document","getElementsByClassName","offsetWidth","tempArray","newVal","prevState","length","pop","classList","map","time","clearTimeout","console","log","slice","iIndex","jIndex","bubblesort","setTimeout","add","undefined","remove","style","height","children","innerHTML","bubbleSort","quickSort","addElementToArray","removeElementFromArray","toggleMinMaxInputState","updateTimeDelay","StopAndReset","marginTop","getRegion","TransitionGroup","index","key","width","App","Boolean","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error"],"mappings":"+cAsBeA,MAnBf,SAA0BC,GACxB,OACE,yBAAKC,UAAU,qBACb,yBAAKA,UAAU,eACb,4CACA,4CAAkBD,EAAME,OAE1B,yBAAKD,UAAU,WACb,yBAAKA,UAAU,mBACf,yBAAKA,UAAU,SAAf,OAA4BD,EAAMG,IAEpC,yBAAKF,UAAU,WACb,yBAAKA,UAAU,mBACf,yBAAKA,UAAU,SAAf,OAA4BD,EAAMI,M,MCU3BC,MAvBf,SAAyBL,GACvB,OACE,yBAAKC,UAAU,oBACb,yBAAKA,UAAU,eACb,2CACA,4CAAkBD,EAAME,OAE1B,yBAAKD,UAAU,WACb,yBAAKA,UAAU,mBACf,yBAAKA,UAAU,SAAf,OAA4BD,EAAMG,EAAlC,MAEF,yBAAKF,UAAU,WACb,yBAAKA,UAAU,4BACf,yBAAKA,UAAU,SAAf,gBAAqCD,EAAMM,aAE7C,yBAAKL,UAAU,WACb,yBAAKA,UAAU,iCACf,yBAAKA,UAAU,SAAf,qBAA0CD,EAAMO,oB,gBCmDzCC,E,kDAlEb,WAAYR,GAAO,IAAD,8BAChB,cAAMA,IACDS,MAAQ,CACXC,IAAK,EAAKV,MAAMW,WAChBC,IAAK,EAAKZ,MAAMa,WAChBC,QAAS,GACTC,SAAS,GANK,E,0DAUJ,IAAD,EACUC,KAAKP,MAAlBC,EADG,EACHA,IAAKE,EADF,EACEA,KAERK,MAAMP,KAASO,MAAML,IAAQM,SAASN,GAAOM,SAASR,IAAQQ,SAASR,GAAO,GAAKQ,SAASN,IAAQ,KACvGI,KAAKG,SAAS,CAACJ,SAAS,IACxBC,KAAKhB,MAAMoB,kBAAkBF,SAASR,GAAMQ,SAASN,KAGrDI,KAAKG,SAAS,CACZJ,SAAS,EACTD,QAAS,mD,+BAON,IAAD,OACN,OACE,kBAACO,EAAA,EAAD,CACEC,GAAIN,KAAKhB,MAAMsB,GACfC,QAAS,IACTC,eAAa,EACbvB,UAAU,qBACV,6BACE,yBAAKA,UAAU,iBACb,yBAAKA,UAAU,SAAf,0BACA,2BACEwB,SAAUT,KAAKhB,MAAM0B,UACrBC,KAAK,OACLC,GAAG,mBACHC,MAAOb,KAAKP,MAAMC,IAClBoB,SAAU,SAACC,GAAD,OAAO,EAAKZ,SAAS,CAACT,IAAKqB,EAAEC,OAAOH,MAAOd,SAAS,QAElE,yBAAKd,UAAU,iBACb,yBAAKA,UAAU,SAAf,yBACA,2BACEwB,SAAUT,KAAKhB,MAAM0B,UACrBC,KAAK,OAAOC,GAAG,mBACfC,MAAOb,KAAKP,MAAMG,IAClBkB,SAAU,SAACC,GAAD,OAAO,EAAKZ,SAAS,CAACP,IAAKmB,EAAEC,OAAOH,MAAOd,SAAS,QAElE,4BAAQU,SAAUT,KAAKhB,MAAM0B,UAAWzB,UAAU,QAAQgC,QAAS,kBAAI,EAAKC,gBAA5E,8BACA,kBAACb,EAAA,EAAD,CACEpB,UAAU,UACVsB,QAAS,IACTD,IAAKN,KAAKP,MAAMM,QAChBS,eAAa,GACb,6BAAMR,KAAKP,MAAMK,gB,GA3DHqB,IAAMC,WCJzB,SAASC,EAAUC,EAAYC,EAAKC,EAAOC,GAChD,KAAID,GAASC,GAAb,CAGA,IAAIC,EAMN,SAAmBJ,EAAYC,EAAKC,EAAOC,GAGzC,IAFA,IAAIE,EAAaH,EACbI,EAAaL,EAAIE,GACZtC,EAAEqC,EAAOrC,EAAEsC,EAAKtC,IACnBoC,EAAIpC,GAAKyC,GACXC,EAAKP,EAAYC,EAAKpC,EAAGwC,GACzBA,MAEAL,EAAWQ,YAAYC,KAAK,MAC5BT,EAAWU,OAAOD,KAAK,OAEzBT,EAAWK,WAAWI,KAAKJ,GAC3BL,EAAWW,QAAQF,KAAK5C,GACxBmC,EAAWY,SAASH,KAAKN,GAM3B,OAJAI,EAAKP,EAAYC,EAAKI,EAAYF,GAClCH,EAAWW,QAAQF,KAAKJ,GACxBL,EAAWK,WAAWI,KAAKJ,GAC3BL,EAAWY,SAASH,KAAKN,GAClBE,EAzBeQ,CAAUb,EAAYC,EAAKC,EAAOC,GAGxD,OAFAJ,EAAUC,EAAYC,EAAKC,EAAOE,EAAe,GACjDL,EAAUC,EAAYC,EAAKG,EAAe,EAAGD,GACtCH,GAyBT,SAASO,EAAKP,EAAYC,EAAKa,EAAGC,GAChC,IAAIC,EAAOf,EAAIa,GACfb,EAAIa,GAAKb,EAAIc,GACbd,EAAIc,GAAKC,EACThB,EAAWQ,YAAYC,KAAK,CAACK,EAAGC,IAChCf,EAAWU,OAAOD,KAAK,CAACR,EAAIa,GAAIb,EAAIc,KCrBtC,SAASR,EAAKP,EAAYC,EAAKa,EAAGC,GAChC,IAAIC,EAAOf,EAAIa,GACfb,EAAIa,GAAKb,EAAIc,GACbd,EAAIc,GAAKC,EACThB,EAAWiB,UAAUR,KAAK,CAACK,EAAGC,IAC9Bf,EAAWkB,WAAWT,KAAK,CAACR,EAAIa,GAAIb,EAAIc,K,YCkV1C,SAASI,EAAgC/C,EAAKE,GAC5C,OAAO8C,KAAKC,MAAMD,KAAKE,UAAYhD,EAAMF,EAAM,GAAKA,GAGvCmD,M,kDA7Vb,WAAY7D,GAAO,IAAD,8BAChB,cAAMA,IACD8D,MAAQ,GACb,EAAKrD,MAAQ,CACXP,KAAM,EACN6D,MAAO,GACPC,UAAW,KACXC,OAAQ,GACRC,OAAQ,IACRC,oBAAoB,EACpBC,cAAc,EACd1C,WAAW,EACX2C,UAAW,GACXC,aAAc,GACdC,aAAc,GACdC,YAAa,GACbC,qBAAsB,GACtBC,0BAA2B,IAjBb,E,gEAsBhB1D,KAAK2D,iBACLC,OAAOC,iBAAiB,SAAU7D,KAAK8D,mBAAmBC,KAAK/D,S,2CAInDgE,SAASC,uBAAuB,OAAO,GAC3CC,aAAe,GACrBlE,KAAKG,SAAS,CAACiD,cAAc,IAE7BpD,KAAKG,SAAS,CAACiD,cAAc,M,uCAM/B,IADA,IAAMe,EAAY,GACThF,EAAE,EAAGA,EAAEa,KAAKP,MAAMP,KAAMC,IAC/BgF,EAAUpC,KAAKU,EAAgCzC,KAAKP,MAAMwD,OAAQjD,KAAKP,MAAMyD,SAE/ElD,KAAKG,SAAS,CACZ4C,MAAOoB,M,0CAKGH,SAASC,uBAAuB,OAAO,GAC3CC,aAAe,GACrBlE,KAAKG,SAAS,CAACiD,cAAc,IAE7BpD,KAAKG,SAAS,CAACiD,cAAc,IAE/B,IAAMgB,EAAS3B,EAAgCzC,KAAKP,MAAMwD,OAAQjD,KAAKP,MAAMyD,QAC7ElD,KAAKG,UAAS,SAAAkE,GAAS,MAAK,CAC1BnF,KAAMmF,EAAUnF,KAAO,EACvB6D,MAAM,GAAD,mBAAMsB,EAAUtB,OAAhB,CAAuBqB,U,+CAK1BpE,KAAKP,MAAMsD,MAAMuB,OAAS,IAChBN,SAASC,uBAAuB,OAAO,GAC3CC,YAAc,GACpBlE,KAAKG,SAAS,CAACiD,cAAc,IAE7BpD,KAAKG,SAAS,CAACiD,cAAc,IAE/BpD,KAAKP,MAAMsD,MAAMwB,MACjBvE,KAAKG,UAAS,SAAAkE,GAAS,MAAG,CACxBnF,KAAMmF,EAAUnF,KAAK,S,sCAKX6B,GACdf,KAAKG,SAAS,CACZ6C,UAAWjC,EAAEC,OAAOH,U,kCAKtB,OAA6B,IAAzBb,KAAKP,MAAM4D,UACN,kBAAC,EAAD,CACClE,EAAGa,KAAKP,MAAM6D,aACdlE,EAAGY,KAAKP,MAAM8D,aACdrE,KAAMc,KAAKP,MAAMP,OAGO,IAAzBc,KAAKP,MAAM4D,UACX,kBAAC,EAAD,CACClE,EAAGa,KAAKP,MAAM+D,YACdlE,WAAYU,KAAKP,MAAMgE,qBACvBlE,gBAAiBS,KAAKP,MAAMiE,0BAC5BxE,KAAMc,KAAKP,MAAMP,YALtB,I,wCAUWQ,EAAKE,GAAK,IAAD,OACzBI,KAAKG,SAAS,CACZ8C,OAAQvD,EACRwD,OAAQtD,IACP,WACD,EAAK+D,sB,qCAKP,GAAI3D,KAAK8C,MAAMwB,OAAS,EAAE,CAExB,IADA,IAAMpF,EAAO8E,SAASC,uBAAuB,OACpC9E,EAAE,EAAGA,EAAED,EAAKoF,OAAQnF,IACvBD,EAAKC,GAAGqF,UAAUF,OAAS,IAC7BpF,EAAKC,GAAGqF,UAAY,OAGxBxE,KAAK8C,MAAM2B,KAAI,SAAAC,GAAI,OAAIC,aAAaD,MACpC1E,KAAK8C,MAAQ,GACb8B,QAAQC,IAAI7E,KAAK8C,OACjB9C,KAAK2D,iBACL3D,KAAKG,SAAS,CACZkD,UAAW,GACX3C,WAAW,SAIbkE,QAAQC,IAAI,U,mCAIH,IAAD,OAOV7E,KAAKG,SAAS,CACZkD,UAAW,EACX3C,WAAW,IAMb,IAJA,IAAMyD,EAAYnE,KAAKP,MAAMsD,MAAM+B,QAC7BxD,ED3JH,SAAoBA,EAAYC,GACrC,IAAK,IAAIpC,EAAE,EAAGA,EAAEoC,EAAI+C,OAAQnF,IAC1B,IAAK,IAAIC,EAAED,EAAE,EAAGC,EAAEmC,EAAI+C,OAAQlF,IACxBmC,EAAInC,GAAKmC,EAAIpC,GACf0C,EAAKP,EAAYC,EAAKpC,EAAGC,IAEzBkC,EAAWiB,UAAUR,KAAK,MAC1BT,EAAWkB,WAAWT,KAAK,OAE7BT,EAAWyD,OAAOhD,KAAK5C,GACvBmC,EAAW0D,OAAOjD,KAAK3C,GAG3B,OAAOkC,EC8Ic2D,CAXK,CACtBF,OAAQ,GACRC,OAAQ,GACRzC,UAAW,GACXC,WAAY,IAOiC2B,GACvCY,EAA0CzD,EAA1CyD,OAAQC,EAAkC1D,EAAlC0D,OAAQzC,EAA0BjB,EAA1BiB,UAAWC,EAAelB,EAAfkB,WAC/BtD,EAAO8E,SAASC,uBAAuB,OAdjC,WAeD9E,GACL,EAAK2D,MAAM3D,GAAK+F,YAAW,WAC3B,EAAK/E,SAAS,CACZmD,aAAcyB,EAAO5F,GACrBoE,aAAcyB,EAAO7F,KAEvBD,EAAK6F,EAAO5F,IAAIqF,UAAUW,IAAI,gBACVC,IAAhBL,EAAO5F,EAAE,IAAoB4F,EAAO5F,KAAO4F,EAAO5F,EAAE,IACtDD,EAAK6F,EAAO5F,EAAE,IAAIqF,UAAUa,OAAO,WAErCnG,EAAK8F,EAAO7F,IAAIqF,UAAUW,IAAI,gBACVC,IAAhBJ,EAAO7F,EAAE,IAAoB6F,EAAO7F,KAAO6F,EAAO7F,EAAE,IACtDD,EAAK8F,EAAO7F,EAAE,IAAIqF,UAAUa,OAAO,WAEhB,OAAjB9C,EAAUpD,KACZD,EAAKqD,EAAUpD,GAAG,IAAImG,MAAMC,OAA5B,UAAwC/C,EAAWrD,GAAG,GAAtD,MACAD,EAAKqD,EAAUpD,GAAG,IAAImG,MAAMC,OAA5B,UAAwC/C,EAAWrD,GAAG,GAAtD,MACAD,EAAKqD,EAAUpD,GAAG,IAAIqG,SAAS,GAAGC,UAAlC,UAAiDjD,EAAWrD,GAAG,IAC/DD,EAAKqD,EAAUpD,GAAG,IAAIqG,SAAS,GAAGC,UAAlC,UAAiDjD,EAAWrD,GAAG,KAE7DA,IAAM4F,EAAOT,OAAS,IACxBpF,EAAK6F,EAAO5F,IAAIqF,UAAUa,OAAO,WACjCnG,EAAK8F,EAAO7F,IAAIqF,UAAUa,OAAO,WACjC,EAAKlF,SAAS,CACZ4C,MAAOoB,EACPd,UAAW,GACX3C,WAAW,IAEb,EAAKoC,MAAQ,MAEd,EAAKrD,MAAMuD,UAAY7D,IA9BnBA,EAAE,EAAGA,EAAE4F,EAAOT,OAAQnF,IAAK,EAA3BA,K,kCAkCC,IAAD,OAQTa,KAAKG,SAAS,CACZkD,UAAW,EACX3C,WAAW,IAMb,IAJA,IAAMxB,EAAO8E,SAASC,uBAAuB,OACvCE,EAAYnE,KAAKP,MAAMsD,MAAM+B,QAC7BxD,EAAaD,EAbK,CACtBM,WAAY,GACZM,QAAS,GACTC,SAAU,GACVJ,YAAa,GACbE,OAAQ,IAQoCmC,EAAW,EAAGnE,KAAKP,MAAMsD,MAAMuB,OAAO,GAC5E3C,EAAuDL,EAAvDK,WAAYM,EAA2CX,EAA3CW,QAASH,EAAkCR,EAAlCQ,YAAaE,EAAqBV,EAArBU,OAAQE,EAAaZ,EAAbY,SAfzC,WAgBA/C,GACP,EAAK2D,MAAM3D,GAAK+F,YAAW,WACzB,EAAK/E,SAAS,CACZqD,YAAavB,EAAQ9C,GACrBsE,qBAAsB9B,EAAWxC,GACjCuE,0BAA2BxB,EAAS/C,KAEtCD,EAAKyC,EAAWxC,IAAIqF,UAAUW,IAAI,8BACVC,IAApBzD,EAAWxC,EAAE,IAAoBwC,EAAWxC,KAAOwC,EAAWxC,EAAE,IAClED,EAAKyC,EAAWxC,EAAE,IAAIqF,UAAUa,OAAO,yBAEzCnG,EAAK+C,EAAQ9C,IAAIqF,UAAUW,IAAI,wBACVC,IAAjBnD,EAAQ9C,EAAE,IAAoB8C,EAAQ9C,KAAO8C,EAAQ9C,EAAE,IACzDD,EAAK+C,EAAQ9C,EAAE,IAAIqF,UAAUa,OAAO,mBAGtCnG,EAAKgD,EAAS/C,IAAIqF,UAAUW,IAAI,4BACVC,IAAlBlD,EAAS/C,EAAE,IAAoB+C,EAAS/C,KAAO+C,EAAS/C,EAAE,IAC5DD,EAAKgD,EAAS/C,EAAE,IAAIqF,UAAUa,OAAO,uBAGhB,OAAnBvD,EAAY3C,KACdD,EAAK4C,EAAY3C,GAAG,IAAImG,MAAMC,OAA9B,UAA0CvD,EAAO7C,GAAG,GAApD,MACAD,EAAK4C,EAAY3C,GAAG,IAAImG,MAAMC,OAA9B,UAA0CvD,EAAO7C,GAAG,GAApD,MACAD,EAAK4C,EAAY3C,GAAG,IAAIqG,SAAS,GAAGC,UAApC,UAAmDzD,EAAO7C,GAAG,IAC7DD,EAAK4C,EAAY3C,GAAG,IAAIqG,SAAS,GAAGC,UAApC,UAAmDzD,EAAO7C,GAAG,KAE3DA,IAAM8C,EAAQqC,OAAO,IACvBpF,EAAKyC,EAAWxC,IAAIqF,UAAUa,OAAO,yBACrCnG,EAAKgD,EAAS/C,IAAIqF,UAAUa,OAAO,uBACnCnG,EAAK+C,EAAQ9C,IAAIqF,UAAUa,OAAO,mBAClC,EAAKlF,SAAS,CACZ4C,MAAOoB,EACPd,UAAW,GACX3C,WAAW,IAEb,EAAKoC,MAAQ,MAEd,EAAKrD,MAAMuD,UAAY7D,IAtCnBA,EAAE,EAAGA,EAAE8C,EAAQqC,OAAQnF,IAAK,EAA5BA,K,+CA8FTa,KAAKG,UAAS,SAAAkE,GAAS,MAAK,CAC1BlB,oBAAqBkB,EAAUlB,yB,+BAG1B,IAAD,OACN,OACE,yBAAKlE,UAAU,gBACb,yBAAKA,UAAU,gBACb,yBAAKA,UAAU,gBAAf,sBACA,4BAAQgC,QAAS,kBAAM,EAAKyE,cAAcjF,SAAUT,KAAKP,MAAMiB,WAA/D,eACA,4BAAQO,QAAS,kBAAM,EAAK0E,aAAalF,SAAUT,KAAKP,MAAMiB,WAA9D,cAEA,4BAAQO,QAAS,kBAAM,EAAK2E,qBAAqBnF,SAAUT,KAAKP,MAAMiB,UAAWzB,UAAU,cAA3F,eACA,4BAAQgC,QAAS,kBAAM,EAAK4E,0BAA0BpF,SAAUT,KAAKP,MAAMiB,WAA3E,kBACA,4BAAQO,QAAS,kBAAM,EAAK0C,kBAAkBlD,SAAUT,KAAKP,MAAMiB,WAAnE,mBACA,4BAAQO,QAAS,kBAAM,EAAK6E,0BAA0BrF,SAAUT,KAAKP,MAAMiB,WAA3E,sBACA,kBAAC,EAAD,CACEJ,GAAIN,KAAKP,MAAM0D,mBACfzC,UAAWV,KAAKP,MAAMiB,UACtBf,WAAYK,KAAKP,MAAMwD,OACvBpD,WAAYG,KAAKP,MAAMyD,OACvB9C,kBAAmB,SAACV,EAAKE,GAAN,OAAc,EAAKQ,kBAAkBV,EAAKE,MAG/D,yBAAKX,UAAU,mBACb,sCACA,2BAAO2B,GAAG,wBAAwBD,KAAK,QAAQE,MAAOb,KAAKP,MAAMuD,UAAWtD,IAAI,IAAIE,IAAI,OAAOkB,SAAU,SAACC,GAAD,OAAK,EAAKgF,gBAAgBhF,IAAIN,SAAUT,KAAKP,MAAMiB,aAE9J,yBAAKzB,UAAU,mBAAf,kBAAiDe,KAAKP,MAAMuD,UAA5D,OACA,4BAAQ/D,UAAU,eAAegC,QAAS,kBAAM,EAAK+E,gBAAgBvF,UAAWT,KAAKP,MAAMiB,UAAW4E,MAAO,CAACW,UAAW,QAAzH,mBAEF,yBAAKhH,UAAU,aACb,yBAAKA,UAAU,WACXe,KAAKkG,aAEP,kBAACC,EAAA,EAAD,CAAiBlH,UAAU,kBACxBe,KAAKP,MAAMsD,MAAM0B,KAAI,SAAC5D,EAAOuF,GAC5B,OACE,kBAAC/F,EAAA,EAAD,CACEgG,IAAKD,EACL7F,QAAS,IACT+E,MAAO,CAACC,OAAO,GAAD,OAAK1E,EAAL,MAAgByF,MAAM,eAAD,OAAiB,EAAK7G,MAAMP,KAA5B,MACnCD,UAAU,OACV,6BACE,yBAAKA,UAAS,eAAW,EAAKQ,MAAM2D,aAA2B,GAAZ,YAAmBvC,GACtE,yBAAK5B,UAAS,eAAW,EAAKQ,MAAM2D,aAA2B,GAAZ,YAAnD,KAAwEgD,e,GA9UpEjF,IAAMC,WCHjBmF,MANf,WACE,OACE,kBAAC,EAAD,OCMgBC,QACW,cAA7B5C,OAAO6C,SAASC,UAEe,UAA7B9C,OAAO6C,SAASC,UAEhB9C,OAAO6C,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEF9C,SAAS+C,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACL3C,QAAQ2C,MAAMA,EAAMzH,c","file":"static/js/main.7f64731d.chunk.js","sourcesContent":["import React from 'react';\nimport './BubbleSortRegion.css';\n\nfunction BubbleSortRegion(props){\n  return(\n    <div className=\"bubblesort-region\">\n      <div className=\"description\">\n        <div>Bubble Sort</div>\n        <div>Total Bars: {props.bars}</div>\n      </div>\n      <div className=\"wrapper\">\n        <div className=\"region-color i\"></div>\n        <div className=\"label\">i = {props.i}</div>\n      </div>\n      <div className=\"wrapper\">\n        <div className=\"region-color j\"></div>\n        <div className=\"label\">j = {props.j}</div>\n      </div>\n    </div>\n  );\n}\n\nexport default BubbleSortRegion;","import React from 'react';\nimport './QuickSortRegion.css';\n\nfunction QuickSortRegion(props){\n  return(\n    <div className=\"quicksort-region\">\n      <div className=\"description\">\n        <div>Quick Sort</div>\n        <div>Total Bars: {props.bars}</div>\n      </div>\n      <div className=\"wrapper\">\n        <div className=\"region-color i\"></div>\n        <div className=\"label\">i = {props.i} </div>\n      </div>\n      <div className=\"wrapper\">\n        <div className=\"region-color swap-index\"></div>\n        <div className=\"label\">Swap Index = {props.swap_index}</div>\n      </div>\n      <div className=\"wrapper\">\n        <div className=\"region-color partition-index\"></div>\n        <div className=\"label\">Partition Index = {props.partition_index}</div>\n      </div>\n    </div>\n  );\n}\n\nexport default QuickSortRegion;","import React from 'react';\nimport './MinMaxInput.css';\nimport { CSSTransition } from 'react-transition-group';\n\nclass MinMaxInput extends React.Component{\n  constructor(props){\n    super(props);\n    this.state = {\n      min: this.props.currentMin,\n      max: this.props.currentMax,\n      message: '',\n      isValid: true\n    }\n  }\n\n  applyChange(){\n    const { min, max } = this.state;\n    let message;\n    if (!isNaN(min) && !isNaN(max) && parseInt(max) > parseInt(min) && parseInt(min) > 0 && parseInt(max) <= 500){\n      this.setState({isValid: true});\n      this.props.applyMinMaxChange(parseInt(min), parseInt(max));\n    }\n    else{\n      this.setState({\n        isValid: false,\n        message: \"There was an error. Please revise your input\"\n      })\n    }\n  }\n\n\n\n  render(){\n    return(\n      <CSSTransition \n        in={this.props.in}\n        timeout={200}\n        unmountOnExit\n        className=\"min-max-container\">\n        <div>\n          <div className=\"input-wrapper\">\n            <div className=\"label\">Min Number (1 - 499): </div>\n            <input \n              disabled={this.props.disableUI} \n              type=\"text\" \n              id=\"min-number-input\" \n              value={this.state.min} \n              onChange={(e) => this.setState({min: e.target.value, isValid: true})}/>\n          </div>\n          <div className=\"input-wrapper\">\n            <div className=\"label\">Max Number (2 - 500):</div>\n            <input \n              disabled={this.props.disableUI} \n              type=\"text\" id=\"max-number-input\" \n              value={this.state.max} \n              onChange={(e) => this.setState({max: e.target.value, isValid: true})}/>\n          </div>\n          <button disabled={this.props.disableUI} className=\"apply\" onClick={()=>this.applyChange()}>Apply Change And Randomize</button>\n          <CSSTransition\n            className=\"message\"\n            timeout={200}\n            in={!this.state.isValid}\n            unmountOnExit>\n            <div>{this.state.message}</div>\n          </CSSTransition>\n        </div>\n      </CSSTransition>\n    );\n  }\n}\n\nexport default MinMaxInput;","export function quicksort(animations, arr, start, end){\n  if (start >= end){\n    return;\n  }\n  let partitionIndex =  partition(animations, arr, start, end);\n  quicksort(animations, arr, start, partitionIndex-1);\n  quicksort(animations, arr, partitionIndex+1, end);\n  return animations;\n}\n\nfunction partition(animations, arr, start, end){\n  let pivotIndex = start;\n  let pivotValue = arr[end];\n  for (let i=start; i<end; i++){\n    if (arr[i] < pivotValue){\n      swap(animations, arr, i, pivotIndex);\n      pivotIndex++;\n    } else{\n      animations.swapIndexes.push(null);\n      animations.values.push(null);\n    }\n    animations.pivotIndex.push(pivotIndex);\n    animations.indexes.push(i);\n    animations.pivotEnd.push(end);\n  }\n  swap(animations, arr, pivotIndex, end);\n  animations.indexes.push(pivotIndex);\n  animations.pivotIndex.push(pivotIndex);\n  animations.pivotEnd.push(end);\n  return pivotIndex;\n}\n\nfunction swap(animations, arr, a, b){\n  let temp = arr[a];\n  arr[a] = arr[b];\n  arr[b] = temp;\n  animations.swapIndexes.push([a, b]);\n  animations.values.push([arr[a], arr[b]]);\n}\n","export function bubblesort(animations, arr){\n  for (let i=0; i<arr.length; i++){\n    for (let j=i+1; j<arr.length; j++){\n      if (arr[j] < arr[i]){\n        swap(animations, arr, i, j);\n      } else{\n        animations.swapIndex.push(null);\n        animations.swapValues.push(null);\n      }\n      animations.iIndex.push(i);\n      animations.jIndex.push(j);\n    }\n  }\n  return animations;\n}\n\nfunction swap(animations, arr, a, b){\n  let temp = arr[a];\n  arr[a] = arr[b];\n  arr[b] = temp;\n  animations.swapIndex.push([a, b]);\n  animations.swapValues.push([arr[a], arr[b]]);\n}","import React from 'react';\nimport './SortingBody.css';\nimport './bubblesort.css';\nimport './quicksort.css';\nimport './mergesort.css';\nimport BubbleSortRegion from '../BubbleSortRegion/BubbleSortRegion';\nimport QuickSortRegion from '../QuickSortRegion/QuickSortRegion';\nimport MinMaxInput from '../MinMaxInput/MinMaxInput';\nimport { quicksort  } from '../../algorithms/quicksort.js';\nimport { bubblesort } from '../../algorithms/bubblesort.js';\nimport { TransitionGroup, CSSTransition } from 'react-transition-group';\n// import { mergesort } from '../../algorithms/mergesort.js';\n\nclass SortingBody extends React.Component{\n  constructor(props){\n    super(props)\n    this.timer = [];\n    this.state = {\n      bars: 5,\n      array: [],\n      timeDelay: 1500,\n      minNum: 10,\n      maxNum: 500,\n      minmaxinput_opened: false,\n      showBarLabel: true,\n      disableUI: false,\n      algorithm: '',\n      bubblesort_i: '',\n      bubblesort_j: '',\n      quicksort_i: '',\n      quicksort_swap_index: '',\n      quicksort_partition_index: ''\n    };\n  }\n\n  componentDidMount(){\n    this.randomizeArray();\n    window.addEventListener('resize', this.handleWindowResize.bind(this));\n  }\n\n  handleWindowResize(){\n    const bar = document.getElementsByClassName('bar')[0];\n    if (bar.offsetWidth <= 28){\n      this.setState({showBarLabel: false});\n    } else{\n      this.setState({showBarLabel: true});\n    }\n  }\n\n  randomizeArray(){\n    const tempArray = [];\n    for (let i=0; i<this.state.bars; i++){\n      tempArray.push(getRandomizedNumberFromInterval(this.state.minNum, this.state.maxNum));\n    } \n    this.setState({\n      array: tempArray\n    });\n  }\n\n  addElementToArray(){\n    const bar = document.getElementsByClassName('bar')[0];\n    if (bar.offsetWidth <= 28){\n      this.setState({showBarLabel: false});\n    } else{\n      this.setState({showBarLabel: true});\n    }\n    const newVal = getRandomizedNumberFromInterval(this.state.minNum, this.state.maxNum);\n    this.setState(prevState => ({\n      bars: prevState.bars + 1,\n      array: [...prevState.array, newVal]\n    }))\n  }\n\n  removeElementFromArray(){\n    if (this.state.array.length > 2){\n      const bar = document.getElementsByClassName('bar')[0];\n      if (bar.offsetWidth > 28){\n        this.setState({showBarLabel: true});\n      } else{\n        this.setState({showBarLabel: false});\n      }\n      this.state.array.pop();\n      this.setState(prevState=>({\n        bars: prevState.bars-1\n      }));\n    }\n  }\n\n  updateTimeDelay(e){\n    this.setState({\n      timeDelay: e.target.value\n    });\n  }\n\n  getRegion(){\n    if (this.state.algorithm === 0){\n      return <BubbleSortRegion \n              i={this.state.bubblesort_i} \n              j={this.state.bubblesort_j}\n              bars={this.state.bars}>\n              </BubbleSortRegion>\n    } \n    else if (this.state.algorithm === 1){\n      return <QuickSortRegion\n              i={this.state.quicksort_i}\n              swap_index={this.state.quicksort_swap_index}\n              partition_index={this.state.quicksort_partition_index}\n              bars={this.state.bars}>\n              </QuickSortRegion>\n    }\n  }\n\n  applyMinMaxChange(min, max){\n    this.setState({\n      minNum: min,\n      maxNum: max\n    }, () => {\n      this.randomizeArray();\n    });\n  }\n\n  StopAndReset(){\n    if (this.timer.length > 0){\n      const bars = document.getElementsByClassName('bar');\n      for (let i=0; i<bars.length; i++){\n        if (bars[i].classList.length > 1){\n          bars[i].classList = \"bar\";\n        }\n      }\n      this.timer.map(time => clearTimeout(time));\n      this.timer = [];\n      console.log(this.timer);\n      this.randomizeArray();\n      this.setState({\n        algorithm: '',\n        disableUI: false\n      });\n    }\n    else{\n      console.log(\"test\");\n    }\n  }\n\n  bubbleSort(){\n    const emptyAnimations = {\n      iIndex: [],\n      jIndex: [],   \n      swapIndex: [],\n      swapValues: []\n    }\n    this.setState({\n      algorithm: 0,\n      disableUI: true\n    });\n    const tempArray = this.state.array.slice();\n    const animations = bubblesort(emptyAnimations, tempArray);\n    const { iIndex, jIndex, swapIndex, swapValues } = animations;\n    let bars = document.getElementsByClassName('bar');\n    for (let i=0; i<iIndex.length; i++){\n        this.timer[i] = setTimeout(() => {\n        this.setState({\n          bubblesort_i: iIndex[i],\n          bubblesort_j: jIndex[i]\n        });\n        bars[iIndex[i]].classList.add('i-index');\n        if (iIndex[i-1] !== undefined && iIndex[i] !== iIndex[i-1]){\n          bars[iIndex[i-1]].classList.remove('i-index');\n        }\n        bars[jIndex[i]].classList.add('j-index');\n        if (jIndex[i-1] !== undefined && jIndex[i] !== jIndex[i-1]){\n          bars[jIndex[i-1]].classList.remove('j-index');\n        }\n        if (swapIndex[i] !== null){\n          bars[swapIndex[i][0]].style.height = `${swapValues[i][0]}px`;\n          bars[swapIndex[i][1]].style.height = `${swapValues[i][1]}px`;\n          bars[swapIndex[i][0]].children[0].innerHTML = `${swapValues[i][0]}`;\n          bars[swapIndex[i][1]].children[0].innerHTML = `${swapValues[i][1]}`;\n        }\n        if (i === iIndex.length - 1){\n          bars[iIndex[i]].classList.remove('i-index');\n          bars[jIndex[i]].classList.remove('j-index');\n          this.setState({\n            array: tempArray,\n            algorithm: '',\n            disableUI: false\n          });\n          this.timer = [];\n        }\n      }, this.state.timeDelay * i);\n    }\n  }\n\n  quickSort(){\n    const emptyAnimations = {\n      pivotIndex: [],\n      indexes: [],\n      pivotEnd: [],\n      swapIndexes: [],\n      values: []\n    }\n    this.setState({\n      algorithm: 1,\n      disableUI: true\n    });\n    const bars = document.getElementsByClassName('bar');\n    const tempArray = this.state.array.slice();\n    const animations = quicksort(emptyAnimations, tempArray, 0, this.state.array.length-1);\n    const { pivotIndex, indexes, swapIndexes, values, pivotEnd } = animations;\n    for (let i=0; i<indexes.length; i++){\n      this.timer[i] = setTimeout(() => {\n        this.setState({\n          quicksort_i: indexes[i],\n          quicksort_swap_index: pivotIndex[i],\n          quicksort_partition_index: pivotEnd[i]\n        });\n        bars[pivotIndex[i]].classList.add('quicksort-pivot-index');\n        if (pivotIndex[i-1] !== undefined && pivotIndex[i] !== pivotIndex[i-1]){\n          bars[pivotIndex[i-1]].classList.remove('quicksort-pivot-index');\n        }\n        bars[indexes[i]].classList.add('quicksort-index'); \n        if (indexes[i-1] !== undefined && indexes[i] !== indexes[i-1]){\n          bars[indexes[i-1]].classList.remove('quicksort-index');\n        }\n        \n        bars[pivotEnd[i]].classList.add('quicksort-pivot-end');\n        if (pivotEnd[i-1] !== undefined && pivotEnd[i] !== pivotEnd[i-1]){\n          bars[pivotEnd[i-1]].classList.remove('quicksort-pivot-end');\n        }\n        \n        if (swapIndexes[i] !== null){\n          bars[swapIndexes[i][0]].style.height = `${values[i][0]}px`;\n          bars[swapIndexes[i][1]].style.height = `${values[i][1]}px`;\n          bars[swapIndexes[i][0]].children[0].innerHTML = `${values[i][0]}`;\n          bars[swapIndexes[i][1]].children[0].innerHTML = `${values[i][1]}`;\n        }\n        if (i === indexes.length-1){\n          bars[pivotIndex[i]].classList.remove('quicksort-pivot-index');\n          bars[pivotEnd[i]].classList.remove('quicksort-pivot-end');\n          bars[indexes[i]].classList.remove('quicksort-index');\n          this.setState({\n            array: tempArray,\n            algorithm: '',\n            disableUI: false\n          });\n          this.timer = [];\n        }\n      }, this.state.timeDelay * i);\n    }\n  }\n\n  // mergeSort(){\n  //   const emptyIndexes = [];\n  //   this.setState({algorithm: 2});\n  //   const tempArray = this.state.array.slice();\n  //   const animations = mergesort(emptyIndexes,tempArray);\n  //   let mergedArray = []\n  //   for (let i=1; i<animations.length; i++){\n  //     mergedArray = mergedArray.concat(animations[i]);\n  //   }\n  //   console.log(mergedArray);\n  //   const bars = document.getElementsByClassName('bar');\n  //   for (let i=0; i<mergedArray.length; i++){\n  //     setTimeout(() => {\n  //       const index = i % (this.state.bars);\n  //       if (emptyIndexes[i-1] !== undefined){\n  //         if (bars[emptyIndexes[i-1][0]] !== undefined){\n  //           bars[emptyIndexes[i-1][0]].classList.remove('pair');\n  //         }\n  //         if (bars[emptyIndexes[i-1][1]] !== undefined){\n  //           bars[emptyIndexes[i-1][1]].classList.remove('pair');\n  //         }\n  //         if (bars[emptyIndexes[i-1][2]] !== undefined){\n  //           bars[emptyIndexes[i-1][2]].classList.remove('end');\n  //         }\n  //       }\n  //       if (emptyIndexes[i] !== undefined){\n  //         if (bars[emptyIndexes[i][0]] !== undefined){\n  //           bars[emptyIndexes[i][0]].classList.add('pair');\n  //         }\n  //         if (bars[emptyIndexes[i][1]] !== undefined){\n  //           bars[emptyIndexes[i][1]].classList.add('pair');\n  //         }\n  //         if (bars[emptyIndexes[i][2]] !== undefined){\n  //           bars[emptyIndexes[i][2]].classList.add('end');\n  //         }\n  //       }\n  //       bars[index].style.height = `${mergedArray[i]}px`;\n  //       bars[index].children[0].innerHTML = `${mergedArray[i]}`;\n  //       if (i === mergedArray.length-1){\n  //         if (bars[emptyIndexes[i][0]] !== undefined){\n  //           bars[emptyIndexes[i][0]].classList.remove('pair');\n  //         }\n  //         if (bars[emptyIndexes[i][1]] !== undefined){\n  //           bars[emptyIndexes[i][1]].classList.remove('pair');\n  //         }\n  //         // console.log(emptyIndexes[i]);\n  //       }\n  //     }, i * this.state.timeDelay);\n  //   }\n  // }\n\n  toggleMinMaxInputState(){\n    this.setState(prevState => ({\n      minmaxinput_opened: !prevState.minmaxinput_opened\n    }));\n  }\n  render(){\n    return(\n      <div className=\"sorting-body\">\n        <div className=\"ui-container\">\n          <div className=\"project-name\">Sorting Visualizer</div>\n          <button onClick={() => this.bubbleSort()} disabled={this.state.disableUI}>Bubble Sort</button>\n          <button onClick={() => this.quickSort()} disabled={this.state.disableUI}>Quick Sort</button>\n          {/* <button onClick={() => this.mergeSort()} disabled={this.state.disableUI}>Merge Sort</button> */}\n          <button onClick={() => this.addElementToArray()} disabled={this.state.disableUI} className=\"add-button\">Add Element</button>\n          <button onClick={() => this.removeElementFromArray()} disabled={this.state.disableUI}>Remove Element</button>\n          <button onClick={() => this.randomizeArray()} disabled={this.state.disableUI}>Randomize Array</button>\n          <button onClick={() => this.toggleMinMaxInputState()} disabled={this.state.disableUI}>Change Min and Max</button>\n          <MinMaxInput \n            in={this.state.minmaxinput_opened} \n            disableUI={this.state.disableUI}\n            currentMin={this.state.minNum}\n            currentMax={this.state.maxNum}\n            applyMinMaxChange={(min, max) => this.applyMinMaxChange(min, max)}\n            >\n          </MinMaxInput>\n          <div className=\"speed-container\">\n            <div>Delay</div>\n            <input id=\"time-delay-controller\" type=\"range\" value={this.state.timeDelay} min=\"1\" max=\"3000\" onChange={(e)=>this.updateTimeDelay(e)} disabled={this.state.disableUI}/>\n          </div>\n          <div className=\"delay-indicator\">Current Delay: {this.state.timeDelay} ms</div>\n          <button className=\"reset-button\" onClick={() => this.StopAndReset()} disabled={!this.state.disableUI} style={{marginTop: '2em'}}>Stop and Reset</button>\n        </div>\n        <div className=\"main-body\">\n          <div className=\"regions\">\n            { this.getRegion() }\n          </div>\n            <TransitionGroup className=\"bars-container\">\n              {this.state.array.map((value, index)=>{\n                return(\n                  <CSSTransition\n                    key={index}\n                    timeout={500}\n                    style={{height: `${value}px`, width: `calc(100% / ${this.state.bars})`}}\n                    className=\"bar\">\n                    <div>\n                      <div className={`value${!this.state.showBarLabel ? ' hidden' : ''}`}>{value}</div>\n                      <div className={`index${!this.state.showBarLabel ? ' hidden' : ''}`}>i={index}</div>  \n                    </div>  \n                  </CSSTransition>\n                )\n              })}\n            </TransitionGroup>\n        </div>\n      </div>\n    );\n  }\n}\n\nfunction getRandomizedNumberFromInterval(min, max){\n  return Math.floor(Math.random() * (max - min + 1) + min);\n}\n\nexport default SortingBody;","import React from 'react';\nimport './App.css';\nimport SortingBody from './components/SortingBody/SortingBody';\n\nfunction App() {\n  return (\n    <SortingBody></SortingBody>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}